- hosts: all
  sudo: yes

  vars:
    go_version: 1.7.1
    mysql_db: bitbot
    mysql_user: bitbot
    mysql_user_pwd: password
    disk_mount: /mnt/bitbot-data
    mysql_data_dir: "{{ disk_mount }}/mysql"
    mysql_log_dir: "{{ disk_mount }}/mysql/log"

  tasks:
    - name: Download APT packages
      apt: name={{item}} update_cache=true
      with_items:
        - gcc
        - git
        - build-essential
        - curl

    - name: Clean previous Go install
      shell: rm -rf /usr/local/go/

    - name: Download Go
      shell: curl https://storage.googleapis.com/golang/go{{go_version}}.linux-amd64.tar.gz | tar -v -C /usr/local/ -xz
      # [WARNING]: Consider using get_url module rather than running curl

    - name: Create symlinks to Go binaries
      shell: ln -fs /usr/local/go/bin/go /usr/local/bin
      # [WARNING]: Consider using file module with state=link rather than running ln

    # Node.js install
    - name: Setup APT for Nodejs
      shell: curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -

    - name: Install Node.js
      apt: pkg=nodejs

    # MySQL 5.7 install (http://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#repo-qg-apt-installing)
    - name: Add APT key for mysql 5.7
      apt_key:
        data: "{{ lookup('file', 'mysql/apt.key') }}"

    - name: Copy mysql.list
      copy: src=mysql/mysql.list dest=/etc/apt/sources.list.d/mysql.list

    - name: Install MySQL packages
      apt: name=mysql-server update_cache=true

    # change MySQL data dir like explained here
    # https://www.digitalocean.com/community/tutorials/how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-16-04
    - name: Stop MySQL
      shell: service mysql stop

    - name: Make MySQL directories
      file: path={{ item }} state=directory owner=mysql
      with_items:
        - "{{ mysql_data_dir }}"
        # - "{{ mysql_log_dir }}"

    # TODO: this may delete existing data.
    - name: Copy Mysql data
      shell: rsync -apv /var/lib/mysql/ {{ mysql_data_dir }}

    - name: Configure MySQL
      template: src=mysql/mysql.conf.d/mysqld.cnf dest=/etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Configure AppArmor
      template: src=mysql/alias dest=/etc/apparmor.d/tunables/alias

    - name: Restar MySQL
      shell: service mysql start

    - name: Restart AppArmor
      shell: service apparmor restart

    # TODO: we need db/init.sql but haven't cloned the repo yet
    - name: Setup database
      shell: |
        mysql -u root -e "
          create database if not exists {{ mysql_db }};
          create user if not exists '{{ mysql_user }}' identified by '{{ mysql_user_pwd }}';
          grant all privileges on {{ mysql_db }} . * to {{ mysql_user }};
        "
